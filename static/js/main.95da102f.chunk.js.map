{"version":3,"sources":["components/context.js","components/breakLength.jsx","components/sessionLength.jsx","components/timer.jsx","image/run_pause.PNG","image/reset.png","components/timerControl.jsx","components/sonAlarme.jsx","components/footer.jsx","components/app.jsx","index.js"],"names":["defaultContext","countSession","setCountSession","timerControle","setTimerControl","countBreak","setCountBreak","timerType","setTimerType","timer","setTimer","colorText","React","createContext","Container","styled","div","Title","Text","Counter","initialCount","timerControl","useContext","EditorContext","id","onClick","arg","BreakLength","props","SessionLength","afficheMinutesSecondes","minutes","Math","floor","seconds","TimeLeft","audioBeep","document","getElementById","useEffect","timerRun","window","setInterval","play","setAttribute","style","borderColor","clearInterval","Timer","TimerControl","v","value","alt","src","run_pause","pause","currentTime","reset","SonAlarme","audioEl","useRef","preload","ref","Footer","href","App","useState","contextValue","Provider","align","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.95da102f.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst defaultContext ={   \r\n    countSession: \"\",\r\n    setCountSession: () => {},\r\n    timerControle:false,    \r\n    setTimerControl: () => {},\r\n    countBreak: \"\",\r\n    setCountBreak: () => {},\r\n    timerType:\"\",\r\n    setTimerType: ()=> {},\r\n    timer:\"\",\r\n    setTimer:()=>{},\r\n    colorText:\"\"\r\n\r\n};\r\n\r\nexport default React.createContext(defaultContext)","import React, {useContext} from\"react\";\r\nimport styled from \"styled-components\";\r\nimport EditorContext from './context';\r\n\r\nconst Container =styled.div`\r\n    width:50%;\r\n    height:100%;\r\n    padding:1%;\r\n    border 1px;\r\n    border-style: solid  solid none ;\r\n    margin : auto;\r\n    text-align:center;\r\n`\r\nconst Title =styled.div`\r\n    width:100%;\r\n    height:100%;\r\n    font-size: 2.5vw;    \r\n`\r\nconst Text =styled.div`\r\n    width:100%;\r\n    height:100%;\r\n    font-size: 2.5vw;\r\n    display:grid;\r\n    grid-template-columns: repeat(3, 1fr); \r\n`\r\n/*Permet de gérer les boutons de la zone Break Length et sa valeur*/\r\nfunction Counter({initialCount=5}){\r\n\r\n    const {timerControl}= useContext(EditorContext)\r\n    const {countBreak}= useContext(EditorContext)\r\n    const {setCountBreak}= useContext(EditorContext)    \r\n\r\n    function decrement(arg,testTimer){\r\n        if (arg>1 & (!testTimer)){\r\n            arg--            \r\n        }\r\n        return arg\r\n    }\r\n    function increment(arg,testTimer){\r\n        if (arg<=59 & (!testTimer)){\r\n            arg++           \r\n        }\r\n        return arg\r\n    }\r\n\r\n    return(\r\n        <Text id=\"break-label\">\r\n            <button id=\"break-decrement\" onClick={() => setCountBreak(decrement(countBreak,timerControl))}>-</button>\r\n            <div id=\"break-length\">{countBreak}</div>\r\n            <button id=\"break-increment\" onClick={() => setCountBreak(increment(countBreak,timerControl))}>+</button>\r\n        </Text>        \r\n\r\n    );\r\n}\r\n\r\nfunction BreakLength(props){    \r\n\r\n    return <Container>\r\n                <Title> Break Length</Title>               \r\n                    <Counter></Counter>                                      \r\n            </Container>\r\n}\r\n\r\n\r\nexport default BreakLength","import React, {useContext} from\"react\";\r\nimport styled from \"styled-components\";\r\nimport EditorContext from './context';\r\n\r\nconst Container =styled.div`\r\n    width:50%;\r\n    height:50%;\r\n    padding:1%;\r\n    border:1px solid black;\r\n    margin : auto;\r\n    text-align:center;\r\n`\r\nconst Title =styled.div`\r\n    width:100%;\r\n    height:100%;\r\n    font-size: 2.5vw;    \r\n`\r\nconst Text =styled.div`\r\n    width:100%;\r\n    height:100%;\r\n    font-size: 2.5vw;\r\n    display:grid;\r\n    grid-template-columns: repeat(3, 1fr); \r\n`\r\n/*Permet de gérer les boutons de la zone Session Length et sa valeur*/\r\nfunction Counter({initialCount=25}){\r\n    \r\n    const {timerControl}= useContext(EditorContext);\r\n    const {countSession}= useContext(EditorContext);\r\n    const {setCountSession}=useContext(EditorContext);\r\n    const {setTimer}=useContext(EditorContext)\r\n       \r\n    function decrement(arg,testTimer){\r\n        if (arg>1 & (!testTimer)){\r\n            arg--\r\n            setTimer(arg*60)\r\n        }\r\n        return arg\r\n    }\r\n    function increment(arg,testTimer){\r\n        if (arg<=59 & (!testTimer)){\r\n            arg++\r\n            setTimer(arg*60)\r\n        }\r\n        return arg\r\n    }\r\n\r\n    return(\r\n        <Text id=\"session-label\">\r\n            <button  id=\"session-decrement\" onClick={() => setCountSession(decrement(countSession,timerControl))}>-</button>\r\n            <div id=\"session-length\">{countSession}</div>\r\n            <button id=\"session-increment\" onClick={() => setCountSession(increment(countSession,timerControl))}>+</button>\r\n        </Text>        \r\n\r\n    );\r\n}\r\n\r\nfunction SessionLength(props){    \r\n\r\n    return <Container>\r\n                <Title> Session Length</Title>               \r\n                    <Counter></Counter> \r\n                                    \r\n            </Container>\r\n}\r\n\r\n\r\nexport default SessionLength","import React, {useEffect, useContext} from \"react\";\r\nimport styled from \"styled-components\";\r\nimport EditorContext from './context';\r\n\r\nconst Container =styled.div`\r\n    width:250px;\r\n    height:250px;    \r\n    border:solid 3px black;\r\n    border-radius: 155px;\r\n    margin : auto;\r\n    padding : 15px;\r\n    align-items : center;\r\n    text-align:center;\r\n`\r\nconst Title =styled.div`    \r\n    font-size: 50px;    \r\n`\r\nconst Text =styled.div`        \r\n    font-size: 100px;\r\n`\r\n/* rend l'affichage en mm:ss */\r\nfunction afficheMinutesSecondes(arg){\r\n    \r\n    let minutes=Math.floor(arg/60)\r\n    let seconds=arg-minutes*60\r\n    seconds = seconds <10 ? '0'+ seconds : seconds\r\n    minutes = minutes <10 ? '0'+ minutes : minutes\r\n    \r\n    return minutes+':'+seconds\r\n\r\n}\r\n\r\n/*gère l'écoulement du timer et des options*/\r\nfunction TimeLeft({initialCount}){\r\n    \r\n    const {countBreak}=useContext(EditorContext)\r\n    const {timerType}=useContext(EditorContext)\r\n    const {setTimerType}=useContext(EditorContext)\r\n    const {countSession}= useContext(EditorContext)   \r\n    const {timerControl}= useContext(EditorContext)\r\n    const {timer}= useContext(EditorContext);\r\n    const {setTimer}=useContext(EditorContext)\r\n    const audioBeep=document.getElementById('beep')\r\n    const {colorText}=useContext(EditorContext)\r\n\r\n    useEffect(function(){\r\n        \r\n        if (timerControl ){\r\n            const timerRun=window.setInterval(function(){ \r\n                setTimer(timer-1)                             \r\n            },1000)\r\n\r\n            /*change le nom du timer, change sa valeur et lance l'avertissement sonore*/\r\n            if (timer===0){\r\n                if (timerType==='Session'){\r\n                    setTimerType('Break')\r\n                    setTimer(60*countBreak)                    \r\n                    audioBeep.play()\r\n\r\n                }else{\r\n                    setTimerType('Session')\r\n                    setTimer(60*countSession)                    \r\n                    audioBeep.play()\r\n                } \r\n            }\r\n\r\n            /*lance l'avertissement sonore*/\r\n            if (timer===60){                \r\n                audioBeep.play()\r\n            }\r\n\r\n            /*change la couleur du texte sous la minute*/\r\n            if (timer>60){                \r\n                colorText.setAttribute(\"style\",\"color:black\")\r\n                colorText.style.borderColor=\"black\"\r\n            }else{\r\n                colorText.setAttribute(\"style\",\"color:red\")\r\n                colorText.style.borderColor=\"red\"\r\n            }\r\n\r\n            return function(){\r\n                clearInterval(timerRun)\r\n            }\r\n        }         \r\n\r\n    },[countSession, countBreak, timerControl, timerType, setTimerType, audioBeep, timer, setTimer, colorText])\r\n\r\n    return(\r\n        <Text id=\"time-left\">            \r\n            {afficheMinutesSecondes(timer)}            \r\n        </Text> \r\n    );\r\n}\r\n\r\nfunction Timer(props){  \r\n    \r\n    const {timerType}=useContext(EditorContext)\r\n\r\n    return <Container id=\"clock_array\">\r\n                <Title id=\"timer-label\">{timerType}</Title>               \r\n                <TimeLeft></TimeLeft>                                    \r\n            </Container>            \r\n}\r\n\r\nexport default Timer","export default __webpack_public_path__ + \"static/media/run_pause.a710e7dc.PNG\";","export default __webpack_public_path__ + \"static/media/reset.8bb72392.png\";","import React,{useContext} from\"react\";\r\nimport styled from \"styled-components\";\r\nimport EditorContext from './context';\r\nimport run_pause from '../image/run_pause.PNG'\r\nimport reset from '../image/reset.png'\r\n\r\nconst Container =styled.div`\r\n    width:50%;\r\n    height:50%;       \r\n    margin : auto;\r\n    text-align:center;\r\n    display:grid;\r\n    grid-template-columns: 2fr 1fr; \r\n`\r\n/* Gère le lancement, la pause et la réinitialisation du timer*/\r\nfunction TimerControl(props){  \r\n\r\n    const {timerControl}= useContext(EditorContext);\r\n    const {setTimerControl}=useContext(EditorContext);\r\n    const {setCountSession}=useContext(EditorContext);  \r\n    const {setCountBreak}= useContext(EditorContext);\r\n    const {setTimerType}=useContext(EditorContext) \r\n    const {setTimer}=useContext(EditorContext)    \r\n    \r\n\r\n    /*Réinitialise toutes les variables*/\r\n    function Reset(){  \r\n        setCountSession(25)\r\n        setTimerControl(false) \r\n        setCountBreak(5)\r\n        setTimerType('Session')\r\n        setTimer(1500)\r\n        const audioBeep=document.getElementById('beep')\r\n        audioBeep.pause()   \r\n        audioBeep.currentTime=0          \r\n        }  \r\n        \r\n        return <Container id=\"timerControleArray\">                           \r\n                <button id=\"start_stop\" \r\n                        onClick={() => setTimerControl(v=>!v)} \r\n                        value={timerControl}> \r\n                        <img alt={\"run_pause\"} src={run_pause} />\r\n                </button> \r\n\r\n                <button id=\"reset\"\r\n                        onClick={Reset}>\r\n                        <img alt={\"reset\"} src={reset} />\r\n                </button>          \r\n            </Container>\r\n}\r\n\r\nexport default TimerControl","import React,{useRef} from 'react'\r\n\r\nfunction SonAlarme(props){\r\n    const audioEl=useRef(null)\r\n    return(\r\n        <div>\r\n            <audio id=\"beep\" preload=\"auto\" ref={audioEl} \r\n            src=\"https://raw.githubusercontent.com/freeCodeCamp/cdn/master/build/testable-projects-fcc/audio/BeepSound.wav\"\r\n            >\r\n            </audio>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SonAlarme","import React from\"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container =styled.div`\r\n    width:50%;\r\n    height:50%;\r\n    padding:1%;    \r\n    margin : auto;\r\n    text-align:center;\r\n`\r\nfunction Footer(props){\r\n\r\nreturn(\r\n\r\n    <Container>          \r\n          Conçu et codé par <a href=\"https://github.com/DelaunayS\">Sébastien Delaunay</a>\r\n    </Container>\r\n)\r\n}\r\n\r\nexport default Footer\r\n","import React, { useState } from 'react';\r\nimport BreakLength from './breakLength'\r\nimport SessionLength from './sessionLength'\r\nimport Timer from './timer'\r\nimport TimerControl from './timerControl'\r\nimport EditorContext from './context'\r\nimport SonAlarme from './sonAlarme'\r\nimport Footer from './footer'\r\n\r\nfunction App(){\r\n\r\n  const [countSession,setCountSession]=useState(25)\r\n  const [timerControl,setTimerControl]=useState(false)\r\n  const [countBreak,setCountBreak]= useState(5);\r\n  const [timerType,setTimerType]=useState('Session')\r\n  const [timer,setTimer]=useState(1500)\r\n  const colorText=document.getElementById('clock_array')\r\n\r\n  const contextValue = {\r\n    countSession,setCountSession,\r\n    timerControl,setTimerControl,\r\n    countBreak,setCountBreak,\r\n    timerType,setTimerType,\r\n    timer,setTimer,\r\n    colorText\r\n\r\n  };\r\n\r\nreturn(\r\n  \r\n    <EditorContext.Provider value={contextValue}>\r\n        <h1 id=\"h1_title\" align=\"center\">Clock 25min + 5min</h1>\r\n        <BreakLength></BreakLength>        \r\n        <SessionLength></SessionLength>\r\n        <br />\r\n        <Timer></Timer>\r\n        <br />\r\n        <TimerControl></TimerControl>\r\n        <SonAlarme></SonAlarme>\r\n        <br />\r\n        <Footer></Footer>\r\n        \r\n  </EditorContext.Provider>  \r\n  \r\n);\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App></App>     \n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}